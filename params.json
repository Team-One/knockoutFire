{"name":"Knockoutfire","tagline":"KnockoutJs observable for Firebase","body":"knockoutFire\r\n============\r\n\r\nKnockoutFire map [Firebase](https://www.firebase.com) json structure into HTML structure using [KnockoutJs](http://knockoutjs.com).\r\n[Live demo at jsFiddle](http://jsfiddle.net/4E8nh/).\r\n\r\nExample\r\n-------\r\n\r\n### Firebase\r\n\r\n```javascript\r\nitems: {\r\n  -XXX: {\r\n    content: \"Hello\"\r\n  }\r\n  -YYY: {\r\n    content: \"World.\"\r\n  }\r\n}\r\n```\r\n\r\n### HTML\r\n\r\n```html\r\n<div id=\"viewModel\">\r\n  <ul data-bind=\"foreach: items\">\r\n    <li data-bind=\"text: content\"></li>\r\n  </ul>\r\n</div>\r\n```\r\n\r\n### Javascript\r\n\r\n```javascript\r\nvar firebase = new Firebase(\"https://knockoutFire-README-example.firebaseio-demo.com\");\r\nvar viewModel = KnockoutFire.observable(firebase, {\r\n  items: {\r\n    \"$item\": {\r\n      content: true,\r\n    }\r\n  }\r\n});\r\nko.applyBindings(viewModel, document.getElementById(\"viewModel\"));\r\n```\r\n\r\n## API Reference\r\n\r\n### KnockoutFire.observable(firebaseRef, map)\r\n\r\n#### The map option\r\n\r\nThe notation resembles to [Firebase Security Rule](https://www.firebase.com/docs/security/security-rules.html).\r\n\r\n##### `Named propertiy`\r\n\r\nYou need to specify which properties are used as observable properties of view models. KnockoutFire will retrieve only what specified in the map.\r\n\r\n- Each properties will be a `ko.observable()` and synchronized with the corresponding value in Firebase.\r\n\r\n```javascript\r\nperson: {\r\n  firstName: true,\r\n  lastName: true\r\n}\r\n```\r\n\r\n##### `$Variables` and `.reverse`\r\n\r\nIf you use a property name start with `$`, the parent property will be `ko.observableArray()`.\r\n\r\n```javascript\r\nusers: {\r\n  \"$user\": {\r\n    nickname: true,\r\n  }\r\n}\r\n```\r\n\r\nFor add/remove/move operations, you should use [Firebase API](https://www.firebase.com/docs/javascript/firebase/index.html) instead of manipulating observable array directly.\r\n\r\n```javascript\r\nusers()[1]().firebase.remove();\r\n```\r\n\r\nIf you need reverse order;\r\n\r\n```javascript\r\ncomments: {\r\n  \".reverse\": true,\r\n  \"$comment\": {\r\n    content: true\r\n  }\r\n}\r\n```\r\n\r\n##### `.startAt`, `.endAt`, `.limit`\r\n\r\n```javascript\r\ncomments: {\r\n  \".startAt\": 0,\r\n  \".endAt\": {\r\n    \".priority\": 100,\r\n    \".name\": \"foo\"\r\n  },\r\n  \".limit\": 20\r\n}\r\n```\r\n\r\n[Querying and Limiting Data in Firebase | Firebase Documentation](https://www.firebase.com/docs/queries.html)\r\n\r\n\r\n##### `.newItem` and `.priority`\r\n\r\n`.newItem` adds additional sub viewModel to an observable array.\r\n\r\n```javascript\r\ncomments: {\r\n  \".newItem\": true,\r\n  \"$comment\": {\r\n    content: true\r\n  }\r\n}\r\n```\r\n\r\n```html\r\n<div data-bind=\"with: comments.newItem\">\r\n  <form data-bind=\"submit: create\">\r\n    <input type=\"text\" data-bind=\"value: content\">\r\n    <input type=\"submit\">\r\n  </form>\r\n</div>\r\n```\r\n\r\nIf you need a `priority` to be set;\r\n\r\n```javascript\r\n\".newItem\": {\r\n  \".priority\": function() { return Date.now() }\r\n}\r\n```\r\n\r\n##### `.indexOf`\r\n\r\nTo use [Denormalized data](https://www.firebase.com/blog/2013-04-12-denormalizing-is-normal.html) use `.indexOf`.\r\n\r\n```javascript\r\nmembers: {\r\n  \"$user\": {\r\n    \".indexOf\": \"/users/$user\",\r\n    \"nickName\": true\r\n  }\r\n}\r\n```\r\n\r\nYou can access nickName like this:\r\n\r\n```javascript\r\nmembers()[0]().nickName()\r\n```\r\n\r\n##### `.extend`\r\n\r\nYou can use [Knockout extender](http://knockoutjs.com/documentation/extenders.html).\r\n\r\n```javascript\r\nko.extenders.person = function(self, option) {\r\n  self.fullName = ko.computed(function() {\r\n    return this.firstName() + \" \" + this.lastName();\r\n  });\r\n};\r\n```\r\n\r\nThen specify the extender by name:\r\n\r\n```javascript\r\nperson: {\r\n  firstName: true,\r\n  lastName: true,\r\n  \".extend\": {person: true}\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}